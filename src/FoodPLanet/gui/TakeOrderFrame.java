/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package FoodPLanet.gui;

import PlanetFood.pojo.Orders;
import PlanetFood.pojo.Orders_Details;
import PlanetFood.pojo.Product;
import PlanetFood.pojo.User;
import PlanetFood.pojo.UserProfile;
import foodplanetapp.Dao.OrdersDao;
import foodplanetapp.Dao.OrdersDetailsDao;
import foodplanetapp.Dao.ProductDao;
import foodplanetapp.Dao.UserDao;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arpit
 */

public class TakeOrderFrame extends javax.swing.JFrame {
    
    private static ArrayList<Product> prodList;
    private static ArrayList<Orders_Details> orderDetails;
    private static Orders order;
    private DefaultTableModel ordrTable;
    private DefaultTableModel totalTable;
    private HashMap<String,String> catId=new HashMap();
    
    static
    {
        order=new Orders();
        orderDetails=new ArrayList();
        prodList=new ArrayList();
    }
    /** Creates new form TakeOrderFrame */
    public TakeOrderFrame() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        txtUser.setText("Hello "+UserProfile.getUsername());
        ordrTable=(DefaultTableModel)OrdrTable.getModel();
        totalTable=(DefaultTableModel)TotalTable.getModel();
        OrdrTable.setRowHeight(OrdrTable.getRowHeight()+20);
        OrdrTable.getTableHeader().setFont(new Font("Times New Roman",Font.BOLD,20));
        TotalTable.setRowHeight(TotalTable.getRowHeight()+50);
        TotalTable.getTableHeader().setFont(new Font("Times New Roman",Font.BOLD,20));
        txtProdId.addItem("");
        try {
            catId=ProductDao.getAllCategoryId();
            order.setOrderId(OrdersDao.generateOrderId());
            txtOrderId.setText(order.getOrderId());
            prodList=ProductDao.getAllProducts();
            Set<String> catName=catId.keySet();
            for (String catname : catName) {
                txtCatId.addItem(catname);
            }
        for(Product p:prodList)
        {
            if(p.getActive().equalsIgnoreCase("y"))
            txtProdId.addItem(p.getProductId());
        }
        }
        catch(SQLException ex)
                {
                JOptionPane.showMessageDialog(null,"Error In Loading Products/Generating OrderID."+ex, "SQL ERROR", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
                }
        txtProdId.setSelectedIndex(0);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtProdId = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProdName = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtCatId = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        txtProdPrice = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdrTable = new javax.swing.JTable();
        btnRemoveItem = new javax.swing.JButton();
        btnPlaceOrder = new javax.swing.JButton();
        btnEditQty = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TotalTable = new javax.swing.JTable();
        txtDiscount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnApply = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnNewOrder = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        txtUser = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 55)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Take Order");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "Order", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 36), new java.awt.Color(204, 204, 204))); // NOI18N

        txtProdId.setEditable(true);
        txtProdId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtProdId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtProdIdItemStateChanged(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Product Id ");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Product Name");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Qty.");

        txtProdName.setEditable(false);
        txtProdName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add Item");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Category Id");

        txtCatId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCatId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select Category>" }));
        txtCatId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtCatIdItemStateChanged(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Price");

        txtProdPrice.setEditable(false);
        txtProdPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCatId, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProdId, 0, 256, Short.MAX_VALUE)
                            .addComponent(txtProdName)
                            .addComponent(txtProdPrice))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtProdId, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                    .addComponent(txtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProdPrice)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtQty)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCatId, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, jLabel2, jLabel3, jLabel4, txtCatId, txtProdId, txtQty});

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "Order Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 36), new java.awt.Color(204, 204, 204))); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(null);

        OrdrTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        OrdrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrdrTable.setColumnSelectionAllowed(true);
        OrdrTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        OrdrTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(OrdrTable);
        OrdrTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (OrdrTable.getColumnModel().getColumnCount() > 0) {
            OrdrTable.getColumnModel().getColumn(1).setMinWidth(100);
            OrdrTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            OrdrTable.getColumnModel().getColumn(1).setMaxWidth(100);
            OrdrTable.getColumnModel().getColumn(2).setPreferredWidth(120);
        }

        btnRemoveItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemoveItem.setText("Remove Item");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });

        btnPlaceOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        btnEditQty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditQty.setText("Edit Qty.");
        btnEditQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditQtyActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("Order Id :");

        txtOrderId.setEditable(false);
        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        TotalTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Price", "Discount", "GST", "GST AMOUNT", "GRAND TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TotalTable.setRowSelectionAllowed(false);
        TotalTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TotalTable);

        txtDiscount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDiscount.setText("0.00");

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Discount % :");

        btnApply.setBackground(new java.awt.Color(255, 255, 255));
        btnApply.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditQty, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnApply, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApply, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditQty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, txtDiscount, txtOrderId});

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnNewOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNewOrder.setText("New Order");
        btnNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewOrderActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/take order.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");

        btnLogOut.setBackground(new java.awt.Color(0, 0, 0));
        btnLogOut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        txtUser.setBackground(new java.awt.Color(0, 0, 0));
        txtUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtUser.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnNewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(417, 417, 417))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(64, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnNewOrder});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtProdIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtProdIdItemStateChanged
         if(evt.getStateChange()==ItemEvent.SELECTED) {
             int y=txtProdId.getSelectedIndex();
        if(y>=1)
        {
        int x=0;
        Iterator it=prodList.iterator();
        for(x=0;x<prodList.size();x++)
        {
            if(prodList.get(x).getProductId().equals((String)txtProdId.getSelectedItem()))
                break;
        }
       
          txtProdName.setText(prodList.get(x).getProdName());
          txtProdPrice.setText(""+prodList.get(x).getProdPrice());
        }
        else if(txtProdId.getItemCount()>=2 && y==-1)
        {
            JOptionPane.showMessageDialog(null,"Please Enter Valid Product ID or Choose From Given Options.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            txtProdId.setSelectedIndex(0);
            txtProdName.setText("");
            txtProdPrice.setText("");
            txtQty.setText("");
            txtCatId.setSelectedIndex(0);
        }
        }
        
    }//GEN-LAST:event_txtProdIdItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        if(txtProdId.getSelectedIndex()!=0 && !txtQty.getText().isEmpty())
        {
        if(TotalTable.getRowCount()>=1)
            totalTable.removeRow(0);
        Orders_Details obj=new Orders_Details();
        Product p=new Product();
        p.setProductId((String)txtProdId.getSelectedItem());
        try
        {
        p=ProductDao.getProductDetails(p);
        obj.setOrderId(order.getOrderId());
        obj.setQuantity(Integer.parseInt(txtQty.getText()));
        obj.setProductId(p.getProductId());
        obj.setCost(p.getProdPrice()*obj.getQuantity());
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Error in Loading Product Details.", "ERROR",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            return;
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null,"Quantity can be a Number Only.", "INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
         orderDetails.add(obj);
         ordrTable.addRow(new Object[]{p.getProdName(),obj.getQuantity(),obj.getCost()});
         txtProdId.removeAllItems();
         txtProdId.addItem("");
         for(Product q:prodList)
        {
            if(q.getActive().equalsIgnoreCase("y"))
            txtProdId.addItem(q.getProductId());
        }
         txtProdId.setSelectedIndex(0);
         txtCatId.setSelectedIndex(0);
         Double sum=0.0;
         for(int i=0;i<OrdrTable.getRowCount();i++)
             sum=sum+(Double)OrdrTable.getValueAt(i,2);
         Double discount=(Double.parseDouble(txtDiscount.getText()))*sum/100;
         totalTable.addRow( new Object[]{ sum,discount,"5.00%",(5*(sum-discount))/100.0,(sum+((5*(sum-discount))/100.0))-discount});
         
        }
        else if(txtQty.getText().isEmpty())
            JOptionPane.showMessageDialog(null,"Quantity cannot be Left Blank.", "Information", JOptionPane.INFORMATION_MESSAGE);
        else if(txtProdId.getSelectedIndex()==0)
            JOptionPane.showMessageDialog(null,"Product ID cannot be Left Blank.", "Information", JOptionPane.INFORMATION_MESSAGE);
       
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        CashierChoicesFrame obj= new CashierChoicesFrame();
        this.dispose();
        obj.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewOrderActionPerformed
        try
        {
            ordrTable.setRowCount(0);
            totalTable.setRowCount(0);
            txtProdPrice.setText("");
            txtProdName.setText("");
            txtQty.setText("");
            order=new Orders();
            order.setOrderId(OrdersDao.generateOrderId());
            orderDetails=new ArrayList();
            txtDiscount.setText("0.00");
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Failed To Generate Next Order Id.Please Restart Program.","FAILED",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnNewOrderActionPerformed

    private void txtCatIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtCatIdItemStateChanged
       if(txtCatId.getSelectedIndex()>0)
       {
           txtProdId.removeAllItems();
           txtProdId.addItem("");
           try {
           ArrayList<String> prodId=ProductDao.getAllActiveProductId(catId.get(txtCatId.getSelectedItem()));
           for(String str:prodId)
           {
               txtProdId.addItem(str);
           }
           }
           catch(SQLException ex)
           {
               JOptionPane.showMessageDialog(null,"Error In Loading Categories.Please Try Again.", "ERROR", JOptionPane.ERROR_MESSAGE);
           }
           txtProdId.setSelectedIndex(0);
           txtProdPrice.setText("");
           txtProdName.setText("");
           txtQty.setText("");
       }
    }//GEN-LAST:event_txtCatIdItemStateChanged

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
       if(OrdrTable.getSelectedRow()!=-1)
       {
           ordrTable.removeRow(OrdrTable.getSelectedRow());
           if(TotalTable.getRowCount()>=1)
            totalTable.removeRow(0);
           Double sum=0.0;
         for(int i=0;i<OrdrTable.getRowCount();i++)
             sum=sum+(Double)OrdrTable.getValueAt(i,2);
          Double discount=(Double.parseDouble(txtDiscount.getText()))*sum/100;
         totalTable.addRow( new Object[]{ sum,discount,"5.00%",(5*(sum-discount))/100.0,(sum+((5*(sum-discount))/100.0))-discount});
           JOptionPane.showMessageDialog(null, "Item Removed.","Success", JOptionPane.INFORMATION_MESSAGE);
       }
       else
           JOptionPane.showMessageDialog(null, "NO Row Selected.Please Select A Row.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnRemoveItemActionPerformed

    private void btnEditQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditQtyActionPerformed
        if(OrdrTable.getSelectedRow()!=-1 && OrdrTable.getSelectedColumn()==1)
        {
        OrdrTable.setCellSelectionEnabled(true);
        String qty=JOptionPane.showInputDialog(null,"Enter New Quantity.", "EDIT QUANTITY", JOptionPane.INFORMATION_MESSAGE);
        if(!qty.isEmpty())
        {
        try
        {
        int oldQty=(int)ordrTable.getValueAt(OrdrTable.getSelectedRow(),1);
        ordrTable.setValueAt(Integer.parseInt(qty), OrdrTable.getSelectedRow(), OrdrTable.getSelectedColumn());
        ordrTable.setValueAt(((Double)(ordrTable.getValueAt(OrdrTable.getSelectedRow(),2))*Integer.parseInt(qty))/oldQty, OrdrTable.getSelectedRow(), 2);
        if(TotalTable.getRowCount()>=1)
           totalTable.removeRow(0);
           Double sum=0.0;
         Double discount=(Double.parseDouble(txtDiscount.getText()))*sum/100;
         for(int i=0;i<OrdrTable.getRowCount();i++)
             sum=sum+(Double)OrdrTable.getValueAt(i,2);
         totalTable.addRow( new Object[]{ sum,discount,"5.00%",(5*(sum-discount))/100.0,(sum+((5*(sum-discount))/100.0))-discount});
        Product p=new Product();
        p.setProdName((String)OrdrTable.getValueAt(OrdrTable.getSelectedRow(),0));
        
        ProductDao.getProductDetailsName(p);
        int i=0;
        for(i=0;i<orderDetails.size();i++)
        {
            if(orderDetails.get(i).getProductId().equals(p.getProductId()))
            break;
        }
        orderDetails.get(i).setQuantity(Integer.parseInt(qty));
        orderDetails.get(i).setCost(Double.parseDouble(""+OrdrTable.getValueAt(OrdrTable.getSelectedRow(), OrdrTable.getSelectedColumn())));
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,"Error In Editing Quantity.Please Re-Take Order.","ERROR",JOptionPane.ERROR_MESSAGE);
            TakeOrderFrame obj=new TakeOrderFrame();
            this.dispose();
            obj.setVisible(true);
            ex.printStackTrace();
        }
        }
        else
            JOptionPane.showMessageDialog(null,"No Quantity Given.Editing Failed.","Information", JOptionPane.INFORMATION_MESSAGE);
         OrdrTable.setCellSelectionEnabled(false);
         OrdrTable.setRowSelectionAllowed(true);
        }
        else if(OrdrTable.getSelectedRow()==-1)
            JOptionPane.showMessageDialog(null, "Please Select Product To Edit. ", "INFORMATION",JOptionPane.INFORMATION_MESSAGE);
        else 
            JOptionPane.showMessageDialog(null, "Please Select Quantity Column Of Product To Edit. ", "INFORMATION",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnEditQtyActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
      
        if(OrdrTable.getRowCount()!=0) {
        order.setDiscount((Double)TotalTable.getValueAt(0,1));
        order.setGST(5.00);
        order.setGSTAmount((Double)TotalTable.getValueAt(0,3));
        order.setGrandTotal((Double)TotalTable.getValueAt(0,4));
        User user=new User();
        user.setUserName(UserProfile.getUsername());
        user.setUserType(UserProfile.getUsertype());
        LocalDate date=LocalDate.now();
        date.format(DateTimeFormatter.ISO_LOCAL_DATE);
        try 
        {
        order.setUserId(UserDao.getUserId(user));
        order.setOrderDate(date);
        if(OrdersDao.placeOrder(order) && OrdersDetailsDao.addOrderDetails(orderDetails))
            JOptionPane.showMessageDialog(null, "Order Placed Successfully.","SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        else 
            JOptionPane.showMessageDialog(null,"Failed To place Order.","FAILED",JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Failed To place Order.Exception In thread"+ex,"FAILED",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        try
        {
            ordrTable.setRowCount(0);
            totalTable.setRowCount(0);
            txtProdPrice.setText("");
            txtProdName.setText("");
            txtQty.setText("");
            txtDiscount.setText("0.00");
            order.setOrderId(OrdersDao.generateOrderId());
            txtOrderId.setText(order.getOrderId());
            order=new Orders();
            orderDetails=new ArrayList();
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Failed To Generate Next Order Id.Please Restart Program.","FAILED",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            TakeOrderFrame obj= new TakeOrderFrame();
            this.dispose();
            obj.setVisible(true);
        }
       }
       else
           JOptionPane.showMessageDialog(null, "Please Add Items To order.", "Order Failed To Be Placed.",JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        
        if(TotalTable.getRowCount()>=1)
            totalTable.removeRow(0);
           Double sum=0.0;
         for(int i=0;i<OrdrTable.getRowCount();i++)
             sum=sum+(Double)OrdrTable.getValueAt(i,2);
          Double discount=(Double.parseDouble(txtDiscount.getText()))*sum/100;
         totalTable.addRow( new Object[]{ sum,discount,"5.00%",(5*(sum-discount))/100.0,(sum+((5*(sum-discount))/100.0))-discount});
    }//GEN-LAST:event_btnApplyActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        
        LoginFrame obj = new LoginFrame();
        this.dispose();
        obj.setVisible(true);
    }//GEN-LAST:event_btnLogOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeOrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrdrTable;
    private javax.swing.JTable TotalTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEditQty;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNewOrder;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> txtCatId;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JComboBox<String> txtProdId;
    private javax.swing.JTextField txtProdName;
    private javax.swing.JTextField txtProdPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JLabel txtUser;
    // End of variables declaration//GEN-END:variables

}
